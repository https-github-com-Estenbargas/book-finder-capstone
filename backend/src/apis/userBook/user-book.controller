import {Response,Request} from "express";
import {User} from "../../utils/interfaces/User";
import {Status} from "../../utils/interfaces/Status";
import {UserBook} from "../../utils/interfaces/UserBook";
import {selectUserBookByPrimaryKey} from "../../utils/user-book/selectUserBookByPrimaryKey";
import {insertUserBook} from "../../utils/user-book/insertUserBook";
import {deleteUserBook} from "../../utils/user-book/deleteUserBook"


export async function toggleUserBookController(request: Request, response: Response) : Promise<Response<Status>> {
   try {
       const {userBookBookId, userBookFavorite, userBookCollection} = request.body
       const user = <User>request.session.user as User
       const userBookUserId = <string>user.userId

       const userBook: UserBook = {
           userBookBookId,
           userBookUserId,
           userBookFavorite,
           userBookCollection,
       }

       const select = await selectUserBookByPrimaryKey(userBook)
       let result = null
       if (select[0]) {
            result = await deleteUserBook(userBook)
       }else{
           result = await insertUserBook(userBook)
       }
        //return result in response.json
       const status: Status = {
           status: 200,
           message: "UserBook successfully updated",
           data: null
       };

       return response.json(result)

   }catch (error) {
        return response.json({status: 500, message: error.message , data: null})
   }

}